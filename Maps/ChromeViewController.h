/* ChromeViewController.h Was Dumped By @greensnow_tweak on Sunday, 16 June 2013 at 02:49:00 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "MapsChromeViews.h"
#import "Maps-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class NSArray, SearchPinsManager, MapsChromeViewItem, NSMutableArray, MKWorldView, UIView, UserLocationView, DirectionsAnnotationsManager;

__attribute__((visibility("hidden")))
@interface ChromeViewController : XXUnknownSuperclass <MapsChromeViews> {
	NSMutableArray* _itemsStack;
	UserLocationView* _userLocationView;
	DirectionsAnnotationsManager* _directionsAnnotationsManager;
	SearchPinsManager* _searchPinsManager;
	MKWorldView* _worldView;
	BOOL _isViewLoading;
	UIView* _worldViewReplacement;
	BOOL _topModeWasSentViewWillDidAppear;
	BOOL _chromeDidReceiveViewWillAppear;
	BOOL _chromeDidReceiveViewDidAppear;
	BOOL _isAnyModeCurrent;
	BOOL _isWorldViewDisownedByPrepareMethods;
	UIView* _containingView;
	BOOL _suppressed;
}
@property(retain, nonatomic) UIView* worldViewReplacement;
@property(retain, nonatomic) UIView* containingView;
@property(retain, nonatomic) MKWorldView* worldView;
@property(readonly, assign, nonatomic) NSArray* itemsStack;
@property(readonly, assign, nonatomic) MapsChromeViewItem* topItem;
@property(assign, nonatomic, getter=isSuppressed) BOOL suppressed;
@property(readonly, assign, nonatomic) SearchPinsManager* searchPinsManager;
@property(readonly, assign, nonatomic) DirectionsAnnotationsManager* directionsAnnotationsManager;
@property(readonly, assign, nonatomic) UserLocationView* userLocationView;
@property(readonly, assign, nonatomic) CGRect unobscuredBoundsInContainingView;
+(Class)userLocationViewClass;
+(id)mapReplacementColor;
+(Class)containingViewClass;
+(Class)chromeViewItemClass;
-(void)viewDidDisappear:(BOOL)view;
-(void)viewWillDisappear:(BOOL)view;
-(void)viewDidAppear:(BOOL)view;
-(void)viewWillAppear:(BOOL)view;
-(void)pushTopItemOnTopOfStackAfterViewLoadIfNeeded;
-(CGSize)attributionAnchorOffset;
-(void)currentModeDidChangeByMovingToItem:(id)currentMode fromItem:(id)item animated:(BOOL)animated;
-(void)currentModeWillChangeByMovingToItem:(id)currentMode fromItem:(id)item animated:(BOOL)animated;
-(void)stackDidChangeByMovingToItem:(id)stack fromItem:(id)item;
-(void)stackWillChangeByMovingToItem:(id)stack fromItem:(id)item;
-(void)reinsertWorldViewInViewHierarchy:(id)viewHierarchy;
-(void)reinsertWorldViewInViewHierarchy;
-(void)addReplacementViewToViewHierarchy:(id)viewHierarchy;
-(void)prepareRemovingWorldViewFromViewHierarchyWithReplacement:(id)replacement retainOwnershipOfWorldView:(BOOL)worldView;
-(void)prepareRemovingWorldViewFromViewHierarchyWithReplacement:(id)replacement;
-(void)_updateInsets;
-(void)invalidateMapInsets;
-(UIEdgeInsets)mapInsetsIncludingBarsWithNonopaqueParts:(BOOL)nonopaqueParts;
-(void)setMapEdgeInsets:(UIEdgeInsets)insets forContainer:(id)container;
-(CGRect)unobscuredBoundsInContainingViewWithOptions:(int)options;
-(UIEdgeInsets)obscuredInsetsForBoundsOptions:(int)boundsOptions;
-(void)layoutForUnobscuredBoundsChange;
-(void)_loadWorldView;
-(void)loadView;
-(BOOL)isViewLoadedOrLoading;
-(void)moveToMapDisplayStyle:(int)mapDisplayStyle forChangeToLightLevel:(int)lightLevel animation:(id)animation duration:(double)duration timingFunctionName:(id)name;
-(void)_lightLevelChanged:(id)changed;
-(void)didLoadView;
-(void)willLoadView;
-(void)cancelWhenNextCurrentActionWithKey:(id)key forMode:(id)mode;
-(BOOL)isWhenNextCurrentActionScheduledWithKey:(id)key forMode:(id)mode;
-(void)whenModeNextBecomesCurrent:(id)current performActionWithKey:(id)key block:(id)block;
-(void)_removeWhenNextCurrentBlocksDictionaryFromMode:(id)mode;
-(void)_invokeWhenNextCurrentBlocksForMode:(id)mode animated:(BOOL)animated;
-(id)_whenNextCurrentBlocksDictionaryForMode:(id)mode creatingIfMissing:(BOOL)missing;
-(void)_performTransitionWithAnimation:(BOOL)animation toItem:(id)item fromItem:(id)item3 isPop:(BOOL)pop;
-(void)viewDidLayoutSubviews;
-(void)popModeAnimated:(BOOL)animated;
-(void)pushMode:(id)mode animated:(BOOL)animated;
-(id)chromeViewItemForMode:(id)mode;
-(BOOL)isCurrentMode:(id)mode;
-(void)dealloc;
-(id)init;
-(id)presentInterruptionOfKind:(int)kind userInfo:(id)info completionHandler:(id)handler;
@end
