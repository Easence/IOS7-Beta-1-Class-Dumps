/* MNVoiceController.h Was Dumped By @greensnow_tweak on Sunday, 16 June 2013 at 02:49:00 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "Maps-Structs.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "VSSpeechSynthesizerDelegate.h"
#import "AVAudioPlayerDelegate.h"

@class VSSpeechSynthesizer, NSDictionary, NSString, AVAudioPlayer;

__attribute__((visibility("hidden")))
@interface MNVoiceController : XXUnknownSuperclass <VSSpeechSynthesizerDelegate, AVAudioPlayerDelegate> {
	NSString* _currentLanguage;
	BOOL _spokenLanguageIsUILanguage;
	NSDictionary* _localizableStrings;
	NSString* _languageLocale;
	NSString* _uiLanguage;
	BOOL _isObservingAudioNotifications;
	BOOL _isPersistentConnectionOpen;
	int _audioSessionType;
	AVAudioPlayer* _leftTurnAudioPlayer;
	AVAudioPlayer* _rightTurnAudioPlayer;
	BOOL _speechMuted;
	BOOL _useHFPForBluetooth;
	BOOL _audioSessionWasBegun;
	id _completionBlock;
	id<VSSpeechSynthesizerDelegate> delegate;
	VSSpeechSynthesizer* synthesizer;
	NSString* queuedSpeech;
}
@property(copy, nonatomic) id completionBlock;
@property(assign, nonatomic) BOOL speechMuted;
@property(copy, nonatomic) NSString* queuedSpeech;
@property(retain, nonatomic) VSSpeechSynthesizer* synthesizer;
@property(assign, nonatomic) id<VSSpeechSynthesizerDelegate> delegate;
@property(assign, nonatomic) int audioSessionType;
@property(retain, nonatomic) NSString* currentVoiceLanguage;
@property(readonly, assign, nonatomic) NSString* defaultVoiceLanguage;
+(void)setVolumeFromDefaults;
+(id)sharedInstance;
-(BOOL)_headphonesAreInUse;
-(BOOL)vibrateForPrompt:(int)prompt;
-(void)_mediaServicesWereReset:(id)reset;
-(void)_audioInterruption:(id)interruption;
-(void)_setVolumeControlEnabled:(BOOL)enabled;
-(void)endAnnounce;
-(void)prepareToAnnounce;
-(void)endAudioSession;
-(void)beginAudioSession;
-(void)_setAudioSessionProperties;
-(void)_setAudioSessionActive:(BOOL)active;
-(id)_rightTurnAudioPlayer;
-(id)_leftTurnAudioPlayer;
-(void)speechSynthesizer:(id)synthesizer didFinishSpeaking:(BOOL)speaking withError:(id)error;
-(void)audioPlayerDidFinishPlaying:(id)audioPlayer successfully:(BOOL)successfully;
-(void)stop;
-(void)speak:(id)speak shortPromptType:(int)type ignorePromptStyle:(BOOL)style completionBlock:(id)block;
-(void)speak:(id)speak shortPromptType:(int)type ignorePromptStyle:(BOOL)style;
-(void)speak:(id)speak shortPromptType:(int)type;
-(BOOL)_beepIfNecessaryWithShortPromptType:(int)shortPromptType;
-(void)speakInitialAnnouncement:(id)announcement;
-(void)_speak:(id)speak;
-(void)dealloc;
-(id)init;
-(void)_setVolumeFromDefaults;
-(id)localizedStringForKey:(const char*)key;
-(id)_vsPreferencesSpokenLanguageIdentifier;
-(BOOL)_isVoiceGuidanceEnabled;
-(id)_uiLanguage;
-(id)_uiLocaleIdentifier;
@end
