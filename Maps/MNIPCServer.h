/* MNIPCServer.h Was Dumped By @greensnow_tweak on Sunday, 16 June 2013 at 02:49:00 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "Maps-Structs.h"
#import "MNNavigationSessionUIDelegate.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "MNLockScreenSessionDelegate.h"

@class NSDictionary, UIView, NSString, NSData, UIImage, MNLockScreenSession, NSArray, CPDistributedMessagingCenter, NSTimer, MNLockScreenDimmingBehavior;
@protocol MNLockScreenLayerSource, MNBackgroundNavigationDelegate, MNExternalGuidanceSource;

__attribute__((visibility("hidden")))
@interface MNIPCServer : XXUnknownSuperclass <MNLockScreenSessionDelegate, MNNavigationSessionUIDelegate> {
	CPDistributedMessagingCenter* _center;
	CPDistributedMessagingCenter* _remoteCenter;
	unsigned _lastSeenManeuverAlert;
	CGRect _previousViewFrame;
	UIView* _previousSuperview;
	BOOL _useMetric;
	BOOL _useYardsForShortDistances;
	BOOL _isDelaying;
	id _beginNavigationDelayedReplyContext;
	BOOL _lastNavigationRequestCameFromSiri;
	BOOL _applicationStateDidChange;
	BOOL _applicationIsActive;
	BOOL _siriSheetIsShowing;
	BOOL _multitaskingTrayIsShowing;
	BOOL _hasAnnouncedViewAvailability;
	BOOL _waitingForDistanceAndTimeToManeuver;
	NSTimer* _waitingForSiriToStartUsTimer;
	unsigned _waitingForSiriToStartUsAssertion;
	BOOL _knowsLockScreenBundleEnabledState;
	BOOL _lockScreenBundleEnabled;
	NSDictionary* _lastSiriRequest;
	int _signColor;
	int _drivingSide;
	BOOL _sendShieldImage;
	NSString* _proceedingToRouteDisplayString;
	unsigned _state;
	int _maneuver;
	NSArray* _maneuverInstructions;
	NSString* _currentGroupIdentifier;
	MNLockScreenDimmingBehavior* _dimmingBehavior;
	int _transportType;
	UIImage* _shieldImage;
	UIImage* _starkBannerShieldImage;
	NSData* _timeAttributedStringData;
	NSData* _etaAttributedStringData;
	int _currentLightLevel;
	id<MNLockScreenLayerSource> _lockScreenLayerSource;
	id<MNExternalGuidanceSource> _externalGuidanceSource;
	id<MNBackgroundNavigationDelegate> _backgroundNavigationDelegate;
	MNLockScreenSession* _lockScreenSession;
	double _distanceToManeuver;
	double _timeToManeuver;
	double _distanceToRoute;
	double _remainingTime;
	double _remainingDistance;
	CGPoint _shieldCenterPoint;
	CGPoint _starkBannerCenterPoint;
	double _lastSentRemainingTime;
	double _lastSentRemainingDistance;
}
@property(copy, nonatomic) NSDictionary* _lastSiriRequest;
@property(copy, nonatomic) NSString* _currentGroupIdentifier;
@property(retain, nonatomic) id beginNavigationDelayedReplyContext;
@property(assign, nonatomic) int _currentLightLevel;
@property(retain, nonatomic) NSData* _etaAttributedStringData;
@property(retain, nonatomic) NSData* _timeAttributedStringData;
@property(assign, nonatomic) double _lastSentRemainingDistance;
@property(assign, nonatomic) double _lastSentRemainingTime;
@property(assign, nonatomic) BOOL _sendShieldImage;
@property(assign, nonatomic) CGPoint _starkBannerCenterPoint;
@property(retain, nonatomic) UIImage* _starkBannerShieldImage;
@property(assign, nonatomic) CGPoint _shieldCenterPoint;
@property(retain, nonatomic) UIImage* _shieldImage;
@property(assign, nonatomic) int _transportType;
@property(retain, nonatomic) MNLockScreenDimmingBehavior* _dimmingBehavior;
@property(retain, nonatomic) NSString* _proceedingToRouteDisplayString;
@property(assign, nonatomic) int _signColor;
@property(copy, nonatomic) NSArray* _maneuverInstructions;
@property(assign, nonatomic) double _remainingTime;
@property(assign, nonatomic) double _timeToManeuver;
@property(assign, nonatomic) double _remainingDistance;
@property(assign, nonatomic) double _distanceToRoute;
@property(assign, nonatomic) double _distanceToManeuver;
@property(assign, nonatomic) int _drivingSide;
@property(assign, nonatomic) int _maneuver;
@property(assign, nonatomic) unsigned _state;
@property(retain, nonatomic, setter=_setLockScreenSession:) MNLockScreenSession* _lockScreenSession;
@property(assign, nonatomic) id<MNBackgroundNavigationDelegate> backgroundNavigationDelegate;
@property(assign, nonatomic) id<MNExternalGuidanceSource> externalGuidanceSource;
@property(assign, nonatomic) id<MNLockScreenLayerSource> lockScreenLayerSource;
+(id)sharedServer;
-(void)directionsSessionRecommendsNewRoute:(id)route oldEstimatedTime:(unsigned)time newEstimatedTime:(unsigned)time3 finished:(id)finished;
-(void)directionsSessionUpdatedETA:(id)eta;
-(void)navigationSessionHideSecondaryStep:(id)step;
-(void)navigationSession:(id)session displaySecondaryStepManeuverType:(int)type junctionType:(int)type3 junctionElements:(XXStruct_DtYHXC*)elements count:(unsigned long)count instructions:(id)instructions shorterAlternativeInstructions:(id)instructions7 shieldType:(int)type8 shieldText:(id)text drivingSide:(int)side signColor:(int)color;
-(void)navigationSessionStartingNextStep:(id)step;
-(void)navigationSession:(id)session failedWithErrorCode:(int)errorCode;
-(void)directionsSession:(id)session failedWithErrorCode:(int)errorCode;
-(void)directionsSessionWillRequestRoute:(id)directionsSession traceRecorderFailed:(BOOL)failed;
-(void)navigationSession:(id)session updatedMatchedLocation:(id)location;
-(void)navigationSession:(id)session updatePointOfInterest:(XXStruct_gLbvpC)interest focusStyle:(int)style;
-(void)directionsSession:(id)session didChangeRoutePreloadSession:(id)session2;
-(void)directionsSession:(id)session didSwitchToNewRoute:(id)newRoute;
-(void)directionsSession:(id)session didRecalculateNewRoute:(id)route;
-(void)directionsSessionWillRecalculateRoute:(id)directionsSession;
-(void)directionsSession:(id)session didReceiveRouteSet:(id)set;
-(void)navigationSession:(id)session didChangeState:(int)state;
-(id)labelAttributes;
-(id)timeAttributes;
-(id)etaAttributedString;
-(id)remainingDistanceTimeAttributedString;
-(id)timeFormatter;
-(id)_startPreparedBackgroundNavigation:(id)navigation userInfo:(id)info;
-(void)timedOutWaitingForSiriToStartUs;
-(void)clearWaitingUntilSiriStartsUs;
-(void)beginWaitingUntilSiriStartsUsWithTimeout:(double)timeout;
-(void)navigationStateDidChangeTo:(unsigned)navigationState reason:(id)reason;
-(id)_prepareBackgroundNavigation:(id)navigation userInfo:(id)info;
-(id)_endNavigation;
-(id)_repeatCurrentGuidance;
-(void)_addCurrentGuidanceStateToMessageDictionary:(id)messageDictionary guidanceCausedVibration:(BOOL)vibration;
-(BOOL)_timeDistanceToDestinationDidChange;
-(BOOL)_guidanceAffectsDimming;
-(BOOL)isNavigationBannerHiddenBySiri;
-(id)_sendCurrentGuidance:(id)guidance userInfo:(id)info;
-(void)_noteGuidanceStateChangedWithVibration:(BOOL)vibration;
-(void)_noteGuidanceStateChanged;
-(void)_applicationDidRemoveDeactivationReason:(id)_application;
-(void)_applicationWillAddDeactivationReason:(id)_application;
-(void)_noteApplicationActiveStateChanged:(id)changed;
-(void)navigationSession:(id)session remainingTime:(double)time remainingDistance:(double)distance distanceUntilManeuver:(double)maneuver timeUntilManeuver:(double)maneuver5;
-(void)_setTimeToManeuver:(double)maneuver distanceToManeuver:(double)maneuver2;
-(void)navigationSession:(id)session displayManeuverAlertForAnnouncementStage:(int)announcementStage;
-(void)navigationSession:(id)session displayPrimaryStepManeuverType:(int)type junctionType:(int)type3 junctionElements:(XXStruct_DtYHXC*)elements count:(unsigned long)count instructions:(id)instructions shorterAlternativeInstructions:(id)instructions7 shieldType:(int)type8 shieldText:(id)text drivingSide:(int)side signColor:(int)color maneuverStepIndex:(unsigned)index isSynthetic:(BOOL)synthetic;
-(void)setTotalRemainingTime:(double)time remainingDistance:(double)distance;
-(void)setDestinationDisplayName:(id)name;
-(void)navigationSession:(id)session proceedToRouteDistance:(double)routeDistance displayString:(id)string remainingTime:(double)time remainingDistance:(double)distance signColor:(int)color closestStepIndex:(unsigned)index;
-(void)showRecalculatingWithSignColor:(int)signColor;
-(void)navigationSessionHasArrived:(id)arrived;
-(void)_showNoGuidance;
-(void)navigationSessionTransportTypeChanged:(id)changed newTransportType:(int)type;
-(void)navigationSessionDetectedNewTransportType:(id)type newTransportType:(int)type2;
-(void)directionsSessionDidFailToReceiveRoute:(id)directionsSession errorCode:(int)code;
-(void)directionsSessionDidCancelRoute:(id)directionsSession;
-(void)navigationSessionWillEnd:(id)navigationSession;
-(void)navigationSessionWillResumeFromPause:(id)navigationSession;
-(void)navigationSessionWillPause:(id)navigationSession;
-(void)navigationSession:(id)session willStartForRoute:(id)route;
-(void)updateLightLevelOnLockScreen:(id)screen;
-(void)lockScreenSessionDidRelinquishView:(id)lockScreenSession;
-(void)lockScreenSessionDidAcquireView:(id)lockScreenSession;
-(id)_setRemoteViewSize:(id)size userInfo:(id)info;
-(id)_hideRemoteView:(id)view userInfo:(id)info;
-(id)_showRemoteView:(id)view userInfo:(id)info;
-(BOOL)_requestDictionaryIsForCurrentSession:(id)currentSession;
-(CGSize)_viewSizeFromRequestDictionary:(id)requestDictionary;
-(void)_endSession;
-(void)_createLockScreenSessionIfNeeded;
-(BOOL)_isInBackground;
-(void)_applicationWillEnterForeground;
-(void)_startLockScreenSessionIfNeeded;
-(void)_applicationDidEnterBackground;
-(void)_didChangeCurrentLocale:(id)locale;
-(void)_changeCurrentGroupIdentifier;
-(void)dealloc;
-(id)init;
-(void)setLockScreenUIEnabled:(BOOL)enabled;
@end
