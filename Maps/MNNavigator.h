/* MNNavigator.h Was Dumped By @greensnow_tweak on Sunday, 16 June 2013 at 02:49:00 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "Maps-Structs.h"
#import "MKLocationManagerObserver.h"
#import "MNExternalGuidanceSource.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "MNGuidanceManagerDelegate.h"
#import "MNRouteManagerDelegate.h"

@class GEOWaypointSearchResultRequest, MNGuidanceManager, MNMapMatcher, MNRouteManager, MNLocation, MNMotionContext, NSTimer;
@protocol MNNavigatorTestingDelegate, MNNavigatorDelegate;

__attribute__((visibility("hidden")))
@interface MNNavigator : XXUnknownSuperclass <MKLocationManagerObserver, MNGuidanceManagerDelegate, MNExternalGuidanceSource, MNRouteManagerDelegate> {
	id<MNNavigatorDelegate> _delegate;
	id<MNNavigatorTestingDelegate> _testingDelegate;
	MNRouteManager* _routeManager;
	NSTimer* _locationUpdateOverdueTimer;
	MNMapMatcher* _mapMatcher;
	MNGuidanceManager* _guidanceManager;
	BOOL _hasGuidanceManagerConfiguredCameraFocus;
	MNMotionContext* _motionContext;
	int _state;
	int _activeTransportType;
	BOOL _activeTransportTypeChanged;
	int _detectedTransportType;
	XXStruct_gLbvpC _detectedTransportTypeOrigin;
	int _responseErrorCode;
	unsigned _responseErrorCount;
	MNLocation* _lastTrackedLocation;
	unsigned _sameLocationPushCounter;
	MNLocation* _lastLocationUsedForReroute;
	unsigned _reroutesOnFeature;
	double _firstPauseTime;
	unsigned _recalculationNetworkUnreachableCount;
	NSTimer* _recalculationRetryTimer;
}
@property(assign, nonatomic) unsigned reroutesOnFeature;
@property(retain, nonatomic) MNLocation* lastLocationUsedForReroute;
@property(retain, nonatomic) MNLocation* lastTrackedLocation;
@property(retain, nonatomic) MNMapMatcher* mapMatcher;
@property(retain, nonatomic) MNGuidanceManager* guidanceManager;
@property(retain, nonatomic) NSTimer* locationUpdateOverdueTimer;
@property(readonly, assign, nonatomic) BOOL isNavigating;
@property(readonly, assign, nonatomic) unsigned responseErrorCount;
@property(readonly, assign, nonatomic) int responseErrorCode;
@property(readonly, assign, nonatomic) int transportType;
@property(assign, nonatomic) int state;
@property(readonly, assign, nonatomic) MNLocation* lastMatchedLocation;
@property(readonly, assign, nonatomic) MNRouteManager* routeManager;
@property(readonly, assign, nonatomic) GEOWaypointSearchResultRequest* destination;
@property(assign, nonatomic) id<MNNavigatorDelegate> delegate;
-(Class)_guidanceManagerClass;
-(BOOL)_checkForArrival:(id)arrival;
-(double)_courseOverride:(id)override courseAccuracy:(double*)accuracy;
-(double)_distanceToForceReroute;
-(BOOL)_allowNavigatorSwitchToTransportType:(int)transportType distanceToDestination:(double)destination;
-(BOOL)_shouldChangeActiveTransportTo:(int)to distanceTraveled:(double)traveled speed:(double)speed;
-(int)_transportType;
-(int)_clActivityType;
-(int)_audioSessionType;
-(id)_newMapMatcher;
-(id)routeRepresentation;
-(BOOL)repeatCurrentGuidance;
-(void)guidanceManagerHasReachedEndOfTurnByTurn:(id)turnByTurn announce:(id)announce;
-(void)guidanceManagerHasArrived:(id)arrived announce:(id)announce;
-(void)retryLastRouteRecalc;
-(BOOL)guidanceManagerIsOffRoute:(id)route location:(id)location stepIndex:(unsigned)index;
-(void)guidanceManager:(id)manager announce:(id)announce shortPromptType:(int)type stage:(int)stage hasSecondaryManeuver:(BOOL)maneuver completionBlock:(id)block;
-(void)guidanceManagerHideSecondaryStep:(id)step;
-(void)guidanceManager:(id)manager displaySecondaryStepManeuverType:(int)type junctionType:(int)type3 junctionElements:(XXStruct_DtYHXC*)elements count:(unsigned long)count instructions:(id)instructions shorterAlternativeInstructions:(id)instructions7 shieldType:(int)type8 shieldText:(id)text drivingSide:(int)side signColor:(int)color;
-(void)guidanceManager:(id)manager displayManeuverAlertForAnnouncementStage:(int)announcementStage;
-(void)guidanceManager:(id)manager displayPrimaryStepManeuverType:(int)type junctionType:(int)type3 junctionElements:(XXStruct_DtYHXC*)elements count:(unsigned long)count instructions:(id)instructions shorterAlternativeInstructions:(id)instructions7 shieldType:(int)type8 shieldText:(id)text drivingSide:(int)side signColor:(int)color maneuverStepIndex:(unsigned)index isSynthetic:(BOOL)synthetic;
-(void)guidanceManagerDidUpdateProgress:(id)guidanceManager remainingTime:(double)time remainingDistance:(double)distance distanceUntilManeuver:(double)maneuver timeUntilManeuver:(double)maneuver5 willAnnounceSoon:(BOOL)soon;
-(void)guidanceManagerProceedingToRoute:(id)route proceedToRouteDistance:(double)routeDistance displayString:(id)string remainingTime:(double)time remainingDistance:(double)distance signColor:(int)color closestStepIndex:(unsigned)index;
-(void)guidanceManager:(id)manager updatePointOfInterest:(XXStruct_gLbvpC)interest focusStyle:(int)style;
-(void)guidanceManagerStartingNextStep:(id)step;
-(BOOL)_exceedsReroutesThresholdsBetweenLocation:(id)location andLocation:(id)location2;
-(BOOL)_handleOffRouteFromLocation:(id)location stepIndex:(unsigned)index findContingencyOnly:(BOOL)only forceRepeatedRecalc:(BOOL)recalc;
-(void)_setUpGuidanceManagerWithAttributedRoute:(id)attributedRoute allowMidRouteStart:(BOOL)start;
-(void)routeManager:(id)manager recordRouteResponse:(id)response;
-(void)routeManager:(id)manager recordRouteRequest:(id)request;
-(void)routeManagerForcedSwitchToNewRoute:(id)newRoute;
-(void)routeManager:(id)manager recommendsNewRoute:(id)route oldEstimatedTime:(unsigned)time newEstimatedTime:(unsigned)time4;
-(void)routeManager:(id)manager failedWithErrorCode:(int)errorCode;
-(void)routeManager:(id)manager didChangeRoutePreloadSession:(id)session;
-(void)routeManagerDidCancelRoute:(id)routeManager errorCode:(int)code;
-(void)routeManagerDidFailToRecalculateRoute:(id)routeManager previousRoute:(id)route errorCode:(int)code;
-(void)routeManager:(id)manager didSwitchToNewRoute:(id)newRoute alreadyOnRoute:(BOOL)route;
-(void)routeManager:(id)manager didRecalculateNewRoute:(id)route;
-(void)routeManagerWillRecalculateRoute:(id)routeManager;
-(void)routeManagerDidFailToReceiveRoute:(id)routeManager errorCode:(int)code;
-(void)routeManager:(id)manager didReceiveRouteSet:(id)set;
-(void)routeManagerWillRequestRoute:(id)routeManager traceRecorderFailed:(BOOL)failed;
-(void)routeManagerDidChangeState:(id)routeManager newRouteState:(int)state;
-(void)routeManagerUpdatedETA:(id)eta;
-(void)_locationUpdateOverdueFireMethod:(id)method;
-(void)locationManagerDidResumeLocationUpdates:(id)locationManager;
-(void)locationManagerDidPauseLocationUpdates:(id)locationManager;
-(BOOL)locationManagerShouldPauseLocationUpdates:(id)locationManager;
-(void)_triggerArrivalAndAnnounce:(id)announce;
-(void)locationManagerDidReset:(id)locationManager;
-(void)locationManagerFailedToUpdateLocation:(id)updateLocation withError:(id)error;
-(void)locationManagerUpdatedLocation:(id)location;
-(void)_updateLocation:(id)location;
-(int)_checkForTransportTypeChange:(id)transportTypeChange;
-(void)_updateActiveTransportType:(id)type;
-(BOOL)_checkForEndOfNavigation:(id)navigation;
-(void)_updateStateForLocation:(id)location;
-(id)_filterLocationUpdateWithLocation:(id)location navCourse:(double)course;
-(void)_resetLocationUpdateOverdueTimerWhenProjecting:(BOOL)projecting;
-(void)switchToNewRoute:(id)newRoute;
-(void)toggleTracePlaying:(BOOL)playing;
-(void)traceForcedRerouteWithResponse:(id)response request:(id)request;
-(void)clearGuidanceManager;
-(void)forceRouteMatchAtLocation:(id)location;
-(void)_resetToCurrentLocationOnRoute:(id)currentLocationOnRoute;
-(void)_resetMapMatcherToLocation:(id)location onRoute:(id)route;
-(id)_currentDate;
-(void)stopNavigator;
-(void)_recalculationRetryTimerFired:(id)fired;
-(void)setResponseErrorCode:(int)code;
-(void)stopSpeaking;
-(void)speak:(id)speak shortPromptType:(int)type ignorePromptStyle:(BOOL)style;
-(void)speak:(id)speak shortPromptType:(int)type;
-(void)startNavigatorInMidRoute:(BOOL)midRoute;
-(void)restartNavigator;
-(id)testingDelegate;
-(void)_announceStart;
-(void)_startLocationUpdates;
-(void)dealloc;
-(id)initWithNavigationSession:(id)navigationSession;
@end
