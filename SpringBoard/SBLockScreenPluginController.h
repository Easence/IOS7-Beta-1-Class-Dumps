/* SBLockScreenPluginController.h Was Dumped By @greensnow_tweak on Saturday, 15 June 2013 at 10:00:01 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import <XXUnknownSuperclass.h> // Unknown library
#import "SpringBoard-Structs.h"
#import "_UISettingsKeyObserver.h"

@class SBLockScreenPluginTransitionFactory, SBLockScreenViewController, SBLockScreenPluginLoader, UIWindow, SBLockScreenTestPluginSettings, SBLockScreenPlugin, NSMutableDictionary;

__attribute__((visibility("hidden")))
@interface SBLockScreenPluginController : XXUnknownSuperclass <_UISettingsKeyObserver> {
	SBLockScreenPluginLoader* _pluginLoader;
	NSMutableDictionary* _plugins;
	SBLockScreenPlugin* _activePlugin;
	SBLockScreenPluginTransitionFactory* _transitionFactory;
	SBLockScreenViewController* _lockScreenViewController;
	BOOL _pluginControllerReceivedViewWillDisappear;
	BOOL _pluginControllerReceivedViewDidDisappear;
	UIWindow* _previousWindow;
	SBLockScreenTestPluginSettings* _testSettings;
	BOOL _lockScreenHasNotifications;
	float _fadeDuration;
}
@property(assign) float fadeDuration;
@property(assign, nonatomic) BOOL lockScreenHasNotifications;
@property(retain, nonatomic) SBLockScreenPluginLoader* pluginLoader;
@property(assign, nonatomic) SBLockScreenViewController* lockScreenViewController;
-(void)settings:(id)settings changedValueForKey:(id)key;
-(BOOL)_pluginHidesNotifications:(id)notifications;
-(void)_transitionFromView:(id)view toView:(id)view2;
-(void)_transitionFromNotificationListToPlugin;
-(void)_transitionFromPluginToNotificationList;
-(void)_updateNotificationListForDisabledPluginController:(id)disabledPluginController;
-(void)_notifyActivePluginRemovedFromWindow;
-(void)_notifyActivePluginAddedToWindow;
-(void)_lockScreenDidMoveToWindow;
-(void)_lockScreenWillMoveToWindow;
-(void)_disablePluginsPassingTest:(id)test withReason:(id)reason;
-(void)_removeActivePlugin;
-(void)_handleUIRelock;
-(void)handleUIUnlock;
-(id)_pluginForName:(id)name controller:(id)controller;
-(void)_loadLockScreenPluginWithName:(id)name activationContext:(id)context;
-(void)disableLockScreenBundleWithName:(id)name deactivationContext:(id)context;
-(void)_handlePluginDisable:(id)disable;
-(id)_transitionContextWithOldPlugin:(id)oldPlugin newPlugin:(id)plugin;
-(void)_setActivePlugin:(id)plugin;
-(void)_refreshLockScreenPlugin;
-(void)reset;
-(void)enableLockScreenBundleWithName:(id)name activationContext:(id)context;
-(id)_pluginView;
-(id)_notificationView;
-(id)_lockScreenView;
-(BOOL)handleMenuButtonTap;
-(id)_highestPriorityPlugin;
-(BOOL)pluginControllerShouldAnimateOthersResumption;
-(CGRect)defaultContentRegionForPluginController:(id)pluginController withOrientation:(int)orientation;
-(id)activePluginBundleName;
-(id)activePlugin;
-(BOOL)isPluginVisible;
-(void)dealloc;
-(void)_addObservers;
-(id)initWithLockScreenViewController:(id)lockScreenViewController;
@end
