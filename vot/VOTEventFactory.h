/* VOTEventFactory.h Was Dumped By @greensnow_tweak on Sunday, 16 June 2013 at 02:49:00 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "VOTElementUpdateProtocol.h"
#import <XXUnknownSuperclass.h> // Unknown library
#import "vot-Structs.h"

@class NSLock, AXTimer, SCRCTargetSelectorTimer, VOTHandwritingManager, SCRCGestureFactory, VOTElement, SCRCThread, VOTGestureEvent, NSString, VOTElementManager;
@protocol VOTEventFactoryCallbackProtocol;

__attribute__((visibility("hidden")))
@interface VOTEventFactory : XXUnknownSuperclass <VOTElementUpdateProtocol> {
	VOTElementManager* _elementManager;
	id<VOTEventFactoryCallbackProtocol> _delegate;
	SCRCGestureFactory* _gestureFactory;
	int _state;
	int _direction;
	int _rotorSoundZone;
	int _continuityZone;
	float _startPinchDistance;
	int _fingerCount;
	float _travelDistance;
	CGPoint _tapHoldOffset;
	VOTGestureEvent* _lastDownEvent;
	NSLock* _currentElementLock;
	VOTElement* _currentElement;
	double _lastEchoTime;
	double _rotateStartTime;
	int _rotateDirection;
	SCRCTargetSelectorTimer* _tapHoldTimer;
	SCRCTargetSelectorTimer* _scrollStatusTimer;
	SCRCTargetSelectorTimer* _twoFingerHoldTimer;
	SCRCTargetSelectorTimer* _memorizeSoundTimer;
	SCRCTargetSelectorTimer* _systemControlLocationTimer;
	CGPoint _nativeSlidingOffset;
	CGPoint _nativeSlidingCenter;
	double _lastTwoFingerSlideTime;
	AXObserverRef _axEventObserver;
	VOTGestureEvent* _currentGestureEvent;
	NSString* _zoomListenerIdentifier;
	struct {
		int direction;
		unsigned count;
		float continuityDistance;
		float distanceTraveled;
		CGPoint firstCountPoint;
	} _zigzag;
	double _lastNativeSlideCancel;
	unsigned _tapAndHoldContextId;
	CGPoint _systemControlStartPoint;
	int _systemControlPosition;
	BOOL _systemControlActivated;
	double _systemControlStartSwipeTime;
	double _systemControlFingerDownFollowupTime;
	IOHIDEventSystemClientRef _ioSystemFilterClient;
	SCRCThread* _filterThread;
	struct {
		BOOL tapAndHoldMode;
		BOOL firedScrollStatus;
		BOOL rotating;
		BOOL memorizingData;
		BOOL twoFingerTapAndSlide;
		BOOL didPlayStartLabelSound;
		BOOL sendingToDirectTouch;
		BOOL sendingToNativeSlide;
	} _flags;
	AXTimer* _handwritingCaptureTimer;
}
@property(retain, nonatomic, setter=_setHandwritingCaptureTimer:) AXTimer* _handwritingCaptureTimer;
@property(readonly, assign, nonatomic) VOTHandwritingManager* handwritingManager;
@property(assign, nonatomic) int orientation;
@property(readonly, assign, nonatomic) unsigned fingerCount;
@property(readonly, assign, nonatomic) CGPoint fingerPosition;
@property(assign, nonatomic) id<VOTEventFactoryCallbackProtocol> delegate;
@property(assign, nonatomic) VOTElementManager* elementManager;
@property(readonly, assign, nonatomic) BOOL tapAndHoldMode;
+(CGPoint)convertDevicePointToZoomedPoint:(CGPoint)zoomedPoint;
-(void)_handleEventWithData:(id)data;
-(void)_convertZoomRecordToDeviceRecord:(id)deviceRecord;
-(CGPoint)_convertZoomPointToDevicePoint:(CGPoint)devicePoint;
-(void)_processTapAndHoldMode:(id)mode;
-(void)_processIdle:(CGPoint)idle;
-(void)_tapHoldFired;
-(void)_twoFingerHoldFired;
-(void)_stopMemorizingSession;
-(void)_startLabelElementSoundPlay;
-(void)currentElementDidUpdate:(id)currentElement;
-(void)_cancelTapAndHold:(CGPoint)hold;
-(void)_scrollStatusFired;
-(void)_beginNativeSliding:(id)sliding;
-(void)startTapAndHoldMode;
-(id)currentElement;
-(void)_processGestureEvent:(id)event;
-(BOOL)directTouchElementsPresent;
-(BOOL)_handleDirectInteractionEvent:(id)event;
-(BOOL)shouldHandwritingParticipateInEvents;
-(void)_feedEventToHandwritingRecognition:(id)handwritingRecognition;
-(void)gestureTappingCallbackWithFactory:(id)factory;
-(void)gestureSplitTappingCallbackWithFactory:(id)factory;
-(void)_updateFingerInSystemControlLocation:(id)systemControlLocation;
-(void)_resetSystemControlStatus;
-(void)_sendSystemControlEvent:(id)event;
-(int)_systemControlPosition:(CGPoint)position;
-(void)_systemControlLocationTimer;
-(void)gestureTrackingCallbackWithFactory:(id)factory;
-(void)processEvent:(id)event;
-(long)_registerForAXNotifications:(BOOL)axnotifications;
-(BOOL)registerForEvents;
-(void)unregisterForEvents;
-(void)resetEventFactory;
-(void)_handleRotorChangedNotification:(id)notification;
-(void)dealloc;
-(void)_registerForZoomListener;
-(void)_installEventFilter;
-(void)_registerForIOHIDUsage;
-(BOOL)_eventFilter:(IOHIDEventRef)filter;
-(void)_handleIOHIDEvent:(IOHIDEventRef)event;
-(id)init;
@end
