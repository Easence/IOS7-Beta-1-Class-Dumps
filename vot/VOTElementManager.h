/* VOTElementManager.h Was Dumped By @greensnow_tweak on Sunday, 16 June 2013 at 02:49:00 PM AEST On IOS 7 Beta 1 Firmware. */
/**
 * This header is generated by class-dump-z 0.2b.
 *
 * Source: (null)
 */

#import "vot-Structs.h"
#import "VOTOutputRequestCompletionProtocol.h"
#import "VOTElementFetchDelegateProtocol.h"
#import "VOTHandwritingManagerElementNavigationProtocol.h"
#import <XXUnknownSuperclass.h> // Unknown library

@class VOTElementFetcher, NSMutableString, VOTRotor, SCRCTargetSelectorTimer, NSData, VOTElementUniqueIdentification, NSMutableSet, VOTOutputRequest, VOTElement, NSMutableDictionary, NSString, NSArray, VOTElementRotor, SCRCIndexMap, NSDictionary;
@protocol VOTElementUpdateProtocol;

@interface VOTElementManager : XXUnknownSuperclass <VOTOutputRequestCompletionProtocol, VOTElementFetchDelegateProtocol, VOTHandwritingManagerElementNavigationProtocol> {
	SCRCIndexMap* _commands;
	VOTElement* _lastValidElement;
	VOTElement* _currentApplication;
	VOTElement* _touchContainer;
	int _touchContainersTouchedCount;
	int _autofillElementIndex;
	int _readWordCyclingCount;
	VOTElement* _currentElement;
	VOTElementFetcher* _fetchManager;
	NSMutableString* _elementTypingBuffer;
	NSRange _elementSelectionRangeBuffer;
	NSString* _webSelectionText;
	int _elementUnitIndex;
	NSRange _elementUnitOutputRange;
	unsigned _elementMathIndex;
	NSArray* _elementMathSegments;
	unsigned _elementMathSegmentGranularity;
	NSRange _highlightedCharacterRange;
	VOTElement* _firstResponderElement;
	VOTElement* _previousTouchTypingKey;
	NSRange _previousTableViewIndexPath;
	double _previousTableViewRowTime;
	double _lastAdjustValueTime;
	double _lastLiveRegionUpdate;
	double _lastPopupTime;
	double _lastTextInsertionAnnouncementTime;
	double _lastItemSelectionFromTouch;
	SCRCTargetSelectorTimer* _updateApplicationTimer;
	SCRCTargetSelectorTimer* _updateLayoutTimer;
	SCRCTargetSelectorTimer* _containerFrameDrawingTimer;
	SCRCTargetSelectorTimer* _visualRotorFadeTimer;
	SCRCTargetSelectorTimer* _elementUpdatesFrequentlyTimer;
	SCRCTargetSelectorTimer* _webPageLoadingSoundTimer;
	SCRCTargetSelectorTimer* _appSuspensionSoundTimer;
	SCRCTargetSelectorTimer* _simulatedPressOutputTimer;
	NSString* _cachedFrequentUpdateText;
	SCRCTargetSelectorTimer* _phoneticLetterTimer;
	NSString* _phoneticLetter;
	SCRCTargetSelectorTimer* _alternativeKeyActivationTimer;
	NSString* _lastScrollStatus;
	CGPoint _fingerLocation;
	CGPoint _lastValidElementLocation;
	VOTElementRotor* _elementRotor;
	VOTRotor* _speechRotor;
	NSString* _cachedSpringBoardIcon;
	int _selectedTextStartLocation;
	int _selectedTextOperation;
	NSMutableDictionary* _lastSeenFontProperties;
	NSDictionary* _lastSeenLineAndColumn;
	int _lastSeenDeviceOrientation;
	NSData* _textMarker;
	VOTTextMarkerRange _textMarkerRange;
	NSArray* _lineArray;
	int _lineArrayPosition;
	CGRect _lineFrame;
	NSMutableDictionary* _flowFromElements;
	NSString* _bookLineString;
	int _bookLineNumber;
	NSRange _bookLineRange;
	int _bookCursorPosition;
	NSString* _bookPageScrollString;
	VOTElement* _bookSubelement;
	NSArray* _availableTypingModes;
	NSString* _typingMode;
	VOTOutputRequest* _phoneticLetterOutputRequest;
	VOTOutputRequest* _phoneticLetterCompleteRequest;
	VOTOutputRequest* _bookPageContentOutputRequest;
	VOTOutputRequest* _readAllOutputRequest;
	VOTOutputRequest* _announcementRequest;
	VOTElement* _elementBeforeAlert;
	VOTElement* _elementBeforePopup;
	NSDictionary* _keyboardKeyCommands;
	CGPoint _passthroughFinish;
	CGPoint _passthroughOffset;
	CGPoint _passthroughStart;
	NSMutableSet* _directInteractionRects;
	float _webPageLoadingProgress;
	int _cursorBorderHitCount;
	NSString* _lastTitleElemenTitle;
	VOTElementUniqueIdentification* _labeledElementIdentification;
	VOTElement* _cachedLabelElement;
	int _customRotorItemIndex;
	VOTElement* _cachedCustomRotorElement;
	NSArray* _allElements;
	VOTElement* _previousItemChooserElement;
	VOTElement* _pendingLayoutChangeMoveToElement;
	SCRCMathAverageValue _roadTravelAngle;
	VOTElement* _upcomingRoadElement;
	CGPoint _firstRoadTravelPoint;
	CGPoint _lastRoadTravelPoint;
	CGPoint _intersectionTravelPoint;
	BOOL _playingMapSound;
	BOOL _shouldContinueRoadTracking;
	SCRCTargetSelectorTimer* _switchRoadsAtIntersectionTimer;
	VOTOutputRequest* _switchRoadsOutputRequest;
	VOTOutputRequest* _endOfRoadApproachingRequest;
	VOTOutputRequest* _startTrackingRoadRequest;
	double _switchedToRoadTime;
	BOOL _approachingEndOfRoad;
	NSString* _webSearchText;
	int _countOutputBlockGeneration;
	id<VOTElementUpdateProtocol> _updateDelegate;
	NSMutableDictionary* _focusedElementInOtherApps;
	struct {
		BOOL lastEventWasIdle;
		BOOL elementCenterSoundPlaying;
		BOOL inStatusBar;
		BOOL focusIsOnElement;
		BOOL tapShouldHandleAutofill;
		BOOL tapShouldHandleTextOperation;
		BOOL usePenumbraForKeyboardKeys;
		BOOL shouldSpeakNextLayoutChange;
		BOOL visualRotorDisplayed;
		BOOL touchingOnNothing;
		BOOL isReadingAll;
		BOOL isReadingAllBook;
		BOOL performedFlickNavigation;
		BOOL performedKeyboardNavigation;
		BOOL performedRotorTextNavigation;
		BOOL performedSearch;
		BOOL inPassthroughMode;
		BOOL didTouchTypingOutputStart;
		BOOL inUnitTestingMode;
		BOOL shouldMoveToFirstVisible;
		BOOL inSearchTextMode;
		BOOL itemChooserVisible;
		BOOL shouldSpeakSameLineTouched;
		BOOL inDirectTouchMode;
		BOOL currentElementAllowsDirectTouch;
		BOOL shouldTurnTrackingIntoDirectTouch;
		BOOL shouldUpdateRotorForElement;
		BOOL avoidAnnouncingDirectTouchArea;
		BOOL wasSendingToNativeSlide;
		BOOL preventCustomRotorItemIndexReset;
		BOOL shouldTriggerAlternativeKeyActivation;
	} _flags;
	double _lastAnnouncementNotificationTime;
	BOOL _didIgnoreLastFirstResponderChangeOnSelectionChange;
	VOTElement* _previousFirstResponder;
	NSString* _previousFirstResponderValue;
	double _timeSpentOnNothing;
	double _lastScreenChange;
	double _lastAlertTime;
	double _lastSelectionChangeTime;
	double _lastScreenNotificationTime;
	double _lastPressOnMediaSessionElement;
	double _touchTypingStartTime;
	double _lastFirstResponderChangeTime;
	double _lastCursorBorderHitTime;
	double _lastTemporaryQuickNavDisableTime;
	double _lastEventOccurredTime;
	double _lastValueChangeTime;
	double _lastWebPageLoadTime;
	double _lastSearchForElementsTime;
	unsigned long long _currentSimilarTraits;
	double _lastActivationTime;
}
@property(assign, nonatomic) unsigned long long currentSimilarTraits;
@property(copy, nonatomic) NSString* previousFirstResponderValue;
@property(retain, nonatomic) VOTElement* previousFirstResponder;
@property(assign, nonatomic) BOOL didIgnoreLastFirstResponderChangeOnSelectionChange;
@property(assign, nonatomic) double lastActivationTime;
@property(assign, nonatomic) double lastSearchForElementsTime;
@property(assign, nonatomic) double lastWebPageLoadTime;
@property(assign, nonatomic) double lastValueChangeTime;
@property(assign, nonatomic) double lastEventOccurredTime;
@property(assign, nonatomic) double lastTemporaryQuickNavDisableTime;
@property(assign, nonatomic) double lastCursorBorderHitTime;
@property(assign, nonatomic) double lastSelectionChangeTime;
@property(assign, nonatomic) double lastFirstResponderChangeTime;
@property(assign, nonatomic) double touchTypingStartTime;
@property(assign, nonatomic) double lastPressOnMediaSessionElement;
@property(assign, nonatomic) double lastScreenNotificationTime;
@property(assign, nonatomic) double lastAlertTime;
@property(assign, nonatomic) double lastScreenChange;
@property(assign, nonatomic) double timeSpentOnNothing;
@property(retain, nonatomic) NSString* phoneticLetter;
@property(retain, nonatomic) VOTElement* touchContainer;
@property(assign, nonatomic) id<VOTElementUpdateProtocol> updateDelegate;
+(void)initialize;
-(void)moveToElementMatchingRotorType:(int)elementMatchingRotorType inDirection:(int)direction;
-(void)_setLastSeenDeviceOrientation:(int)orientation;
-(void)setUnitTestingMode:(BOOL)mode;
-(void)_handlePerformEjectButtonPress:(id)press;
-(void)_handlePerformVolumeDownButtonPress:(id)press;
-(void)_handlePerformVolumeUpButtonPress:(id)press;
-(BOOL)shouldAllowSpeaking;
-(void)_handleKeyboardCommandEvent:(id)event;
-(void)_handleBrailleRefreshEvent:(id)event;
-(void)_handleBrailleEvent:(id)event;
-(void)_handleReadContentLite:(id)lite;
-(void)_handleToggleQuickNav:(id)nav;
-(void)_handleHomeButtonPress;
-(void)handleHomeButtonPress;
-(void)handleStateReset;
-(void)_handleStateReset;
-(void)_handleDecreaseVolume:(id)volume;
-(void)_handleIncreaseVolume:(id)volume;
-(void)_handleVolumeChange:(BOOL)change;
-(void)_handleRotateOrientation:(id)orientation;
-(BOOL)allowsSystemControlEvent;
-(void)_handleSystemControlActivation:(id)activation;
-(void)_handleScrollByPageNotification:(id)notification;
-(void)_handleAutoCorrectionMadeNotification:(id)notification;
-(void)_handleKeyboardChangedNotification;
-(void)_handleAutoCorrectionDisplayNotification:(id)notification;
-(void)_handleWebPageLoaded:(id)loaded;
-(void)_webPageLoadingSound;
-(void)_clearWebLoadedSound;
-(void)_handleScreenChange:(id)change sound:(id)sound;
-(void)_updateDisplayWithCurrentElement;
-(void)_handleAlertReceived:(id)received;
-(id)_retrieveDefaultElementForPosition:(CGPoint)position;
-(void)_handleAnnouncement:(id)announcement;
-(void)_reupdateTextSelectionInformation;
-(void)_handleInvalidTextInputNotification:(id)notification;
-(void)_handleInvalidStatusChanged:(id)changed;
-(void)_handleAppSuspendAnimationProgressNotification:(id)notification;
-(void)_appSuspensionSoundTimer;
-(void)_handleKeyboardKeySelectedNotification:(id)notification;
-(void)_handleElementMoved:(AXUIElementRef)moved;
-(void)_processValueChangeWithFirstResponder:(id)firstResponder existingFirstResponder:(BOOL)responder changeType:(id)type hardwareKeyboard:(BOOL)keyboard;
-(void)resetTextAndSelectionCaches;
-(void)_handleValueChangedNotification:(id)notification;
-(int)typingFeedbackForKeyboardType;
-(void)_handleSelectionChangedNotification:(id)notification;
-(BOOL)_isKeyboardLineMovement;
-(void)_handleWebSelectionChangedNotification:(id)notification;
-(void)_outputWebLineWithMarkerRange:(id)markerRange withElement:(id)element;
-(BOOL)_shouldSwitchToFirstResponder:(id)firstResponder;
-(void)_handleFirstResponderChangedNotification:(id)notification;
-(void)_handleMoveToElementNotification:(id)elementNotification;
-(void)_finishHandlingMoveToElementNotification:(id)elementNotification;
-(void)updateCurrentElementFrame;
-(void)_updateCursorFrameForElementIfNeeded:(id)elementIfNeeded;
-(void)_updateCurrentElementFrame;
-(void)_updateFirstResponder;
-(void)setFirstResponder:(id)responder;
-(void)setCurrentElement:(id)element;
-(void)setCurrentApplication:(id)application;
-(void)_handleAXInspectorNotification:(id)notification data:(id)data;
-(void)_updateFirstResponderTypingBuffer;
-(void)_handleLayoutChange:(BOOL)change moveToElement:(id)element;
-(void)_handleLayoutChangeFromTimer:(id)timer;
-(void)_handleElementChangedNotification:(id)notification;
-(void)_updateApplicationAndSpeak:(id)speak moveToElement:(id)element stringToAnnounce:(id)announce;
-(void)_updateApplication;
-(void)updateApplicationAndSpeak:(id)speak;
-(void)updateApplication;
-(void)_handleUpdateAppFromTimer:(id)timer;
-(id)_cachedSpringBoardIcon:(id)icon;
-(void)outputRequestFinished:(id)finished;
-(void)_outputRequestFinished:(id)finished;
-(id)_updateTouchContainerForElement:(id)element playSound:(BOOL)sound;
-(void)_echoDifferentElement:(id)element forEvent:(id)event;
-(void)_echoDifferentElement:(id)element forEvent:(id)event onlyOutputTouchContainerAndSounds:(BOOL)sounds;
-(id)_echoDifferentTouchContainer:(id)container forEvent:(id)event;
-(void)_drawTouchContainerFrame;
-(void)_echoNoElementForEvent:(id)event;
-(void)_echoSameElement:(id)element forEvent:(id)event;
-(void)_handleMapSameElement:(id)element forEvent:(id)event;
-(void)_addFormattedStringToRequest:(id)request formattedString:(id)string withElement:(id)element;
-(void)_switchToOtherRoad;
-(void)_processPassthroughAllowedWithEvent:(id)event initialTouch:(BOOL)touch;
-(void)_finishPassthroughMode;
-(void)_echoStatusBarStatus:(id)status;
-(BOOL)_echoLineInElement:(id)element forEvent:(id)event forDifferentElement:(BOOL)differentElement;
-(void)_setLastSeenLineAndColumn:(id)column;
-(void)_outputDataDetectorIfPresent:(CGRect)present element:(id)element includeLinks:(BOOL)links;
-(void)_handleTracking:(id)tracking;
-(BOOL)_continueTrackingKeyboardKey:(id)key;
-(BOOL)_continueTrackingRoadElementWithPoint:(CGPoint)point;
-(void)_endNativeSliding:(BOOL)sliding;
-(void)_addDescription:(id)description toRequest:(id)request withOptions:(int)options;
-(void)updateTitleElementLabels:(id)labels;
-(BOOL)shouldElement:(id)element beCombined:(id)combined;
-(BOOL)elementEligibleToFindTitleElement:(id)findTitleElement;
-(void)_handleAXInspectorTracking:(id)tracking;
-(void)_handleScrollStatus:(id)status;
-(void)_handleScrollToPoint:(id)point;
-(void)_handleScrollDownPage:(id)page;
-(void)_handleScrollByPage:(id)page;
-(id)_nearestElementWithMatch:(id)match startElement:(id)element;
-(id)_nearestElementWithMatch:(id)match startElement:(id)element forward:(BOOL)forward;
-(id)_nearestScrollableElement:(id)element;
-(id)_nearestWebElement:(id)element;
-(void)_handleAppSwitch:(id)aSwitch;
-(void)_handleSpeechRotorValueChange:(id)change;
-(void)_handleSpeechRotorChange:(id)change;
-(void)_handleUsePitchChange:(BOOL)change;
-(void)_handleSpeechPhoneticsChange:(BOOL)change;
-(void)_handleTypingEchoChange:(BOOL)change;
-(void)_handleSpeechPunctuationChange:(BOOL)change;
-(void)_handleSpeechRateChange:(BOOL)change;
-(void)_handleEscape:(id)escape;
-(void)_handleStartHelpMode:(id)mode;
-(BOOL)isOnElementManagerThread;
-(id)currentApplication;
-(id)currentElement;
-(CGRect)currentLineFrame;
-(id)_currentElement;
-(BOOL)customRotorActionsEqual:(id)equal otherActions:(id)actions;
-(void)_setCurrentElement:(id)element;
-(BOOL)_languageRotorItemsContainLanguage:(id)language;
-(void)_updateExternalAccessory:(id)accessory;
-(void)_updateAllowSingleLetterSearching;
-(void)_resetQuickNavState;
-(void)_phoneticLetterRepeat;
-(void)_activateAlternativeKeyboardKey:(id)key;
-(BOOL)_queuePhoneticTimerWithLetter:(id)letter request:(id)request;
-(void)_handleElementMoveToStatusBar:(id)statusBar;
-(void)_handleContainerMovement:(id)movement direction:(int)direction;
-(void)_handleContainerMovement:(id)movement;
-(void)_handleCustomRotorAction:(id)action direction:(int)direction;
-(void)_handleCustomRotorMovement:(id)movement direction:(int)direction;
-(void)_handleVerticalMovement:(id)movement direction:(int)direction;
-(void)_handleElementMovement:(id)movement;
-(BOOL)_moveElementToFlowTo:(id)to;
-(void)_setNearestElementMovingForward:(BOOL)forward;
-(id)_sonarElementInForwardDirection:(BOOL)forwardDirection limit:(int)limit;
-(id)_sonarElementFromPoint:(CGPoint)point inForwardDirection:(BOOL)forwardDirection limit:(int)limit;
-(BOOL)_prepareElementOutputHeaders:(id)headers currentElement:(id)element request:(id)request;
-(id)_handleValueChangeForPhoneDeletionWithOldString:(id)oldString newString:(id)string;
-(int)findLocationOfDifferenceInOldString:(id)oldString withNewString:(id)newString;
-(void)_outputSelectionDifference:(NSRange)difference oldRange:(NSRange)range string:(id)string;
-(void)_handlePerformTextOperation:(id)operation;
-(void)_handleNextTextOperationInDirection:(int)direction withEvent:(id)event;
-(id)_currentResponder;
-(void)_elementUpdatesFrequently;
-(void)_handleScreenLock;
-(BOOL)_handlePressActionResult;
-(void)_simulatedPressOutputTimer:(id)timer;
-(BOOL)_handleSimulatedLongPress:(id)press;
-(void)_handlePerformHomeButtonPress:(id)press;
-(void)_handleToggleScreenCurtain:(id)curtain;
-(void)_handleToggleRotationCapability:(id)capability;
-(void)_handleToggleMute:(id)mute;
-(void)_handleSimpleTap:(id)tap;
-(void)_handlePerformCustomAction:(id)action;
-(void)_handlePerformPressAction:(id)action;
-(void)_updateLastFirstResponderChangedTime;
-(void)_updateCurrentWordContextForBook:(id)book;
-(BOOL)_useLineFrameBoundsForTouch:(id)touch;
-(void)_handleDoubleTap:(id)tap;
-(void)_handleStartStopToggle:(id)toggle;
-(void)_handleLabelElement:(id)element;
-(void)_resetElementLabel;
-(void)_handleLabelElementAcceptedNotification:(id)notification;
-(void)_handleWebTextAvailableNotification:(id)notification;
-(void)_handleWebSearchResult:(int)result withEvent:(id)event;
-(void)_handleWebTextMatchSelectedNotification:(id)notification;
-(void)_handleAdjustValue:(id)value reverse:(BOOL)reverse;
-(void)_valueWait:(id)wait oldValue:(id)value waitTime:(float)time;
-(BOOL)_handleNextAutofill:(id)autofill reverse:(BOOL)reverse;
-(void)_finishHandlingNextAutofillWithElement:(id)element;
-(void)_handlePerformTapAutofill:(id)autofill;
-(void)_handleSearchRotorSetMathPosition:(id)position;
-(id)_currentRotorSelection;
-(void)_handleMathGranularMovement:(int)movement event:(id)event;
-(id)_treePositionForMathSegment:(id)mathSegment;
-(void)_handleUpdatedMathElementIndex;
-(void)_refreshMathSegmentsIfNeeded;
-(void)_refreshMathSegmentsIfNeededWithPreferredDirection:(int)preferredDirection;
-(unsigned)_currentMathGranularityLevel;
-(void)_resetMathGranularMovementState;
-(void)_handleZoomMovement:(int)movement event:(id)event;
-(void)_handleUserSelection:(id)selection;
-(void)_handleWebSelection:(id)selection;
-(void)_outputNextTextSegmentUnit:(int)unit direction:(int)direction;
-(void)_outputTextSegmentForRange:(NSRange)range string:(id)string element:(id)element usePhoneticLetterTimer:(BOOL)timer;
-(void)_outputNextTextSegmentUnit:(int)unit direction:(int)direction string:(id)string element:(id)element;
-(NSRange)_outputRangeForCharacterSegment:(id)characterSegment direction:(int)direction;
-(void)_handleRowMovement:(id)movement direction:(int)direction;
-(void)_handleLineMovement:(id)movement direction:(int)direction;
-(void)_handleLineMovement:(id)movement;
-(void)_handleLineMovementInWeb:(id)web direction:(int)direction;
-(void)_finishHandlingLineMovementInWeb:(id)web direction:(id)direction withCurrentElement:(id)currentElement markerArray:(id)array textObjects:(id)objects;
-(void)_handleWordMovement:(id)movement direction:(int)direction;
-(void)_handleLetterMovement:(id)movement direction:(int)direction;
-(void)_handleCharacterMovement:(id)movement;
-(void)_moveCursorForElement:(id)element direction:(int)direction unit:(int)unit;
-(void)_handleReadWord:(id)word;
-(id)_computeChangedFontAttributes:(id)attributes;
-(void)_handleRotorTypingModeMovement:(int)movement withEvent:(id)event;
-(void)_handleRotorLanguageMovement:(int)movement withEvent:(id)event;
-(id)_languageNameForCode:(id)code;
-(void)_resetRotorTextNavigation;
-(void)_resetOtherTapInputModes;
-(void)_resetSearchType;
-(void)_resetReadAllRequest;
-(void)handleSearchRotorDown:(id)down;
-(void)handleSearchRotorUp:(id)up;
-(void)_handleSingleLetterSearch:(id)search;
-(void)_handleSearchRotorMovementWithoutRotorUpdateInDirectionUp:(BOOL)directionUp event:(id)event;
-(void)_handleSearchRotorMovement:(BOOL)movement event:(id)event;
-(void)_handleElementSearch:(id)search rotorType:(int)type direction:(int)direction;
-(id)_copyMatchBlockForRotorType:(int)rotorType matchTraits:(unsigned long long*)traits;
-(id)_copyMatchBlockSearchField;
-(id)_copyMatchBlockTextField;
-(id)_copyMatchBlockSimilar;
-(unsigned long long)filterTraitsByPriority:(unsigned long long)priority;
-(id)_copyMatchBlockButton;
-(id)_copyMatchBlockInternalLink;
-(id)_copyMatchBlockLandmarkStart;
-(id)_copyMatchBlockTableStart;
-(id)_copyMatchBlockListStart;
-(id)_copyMatchBlockFormElement;
-(id)_copyMatchBlockStaticText;
-(id)_copyMatchBlockLink;
-(id)_copyMatchBlockNonVisitedLink;
-(id)_copyMatchBlockForHeadingLevel:(int)headingLevel;
-(id)_copyMatchBlockHeader;
-(id)_copyMatchBlockVisitedLink;
-(id)_copyMatchBlockImage;
-(id)_copyMatchBlockAnyElement;
-(id)_copyMatchBlockSearchText;
-(void)_elementFetchFoundElement:(id)element needsForceCacheUpdate:(id)update;
-(void)_echoSearchTypeNotFound;
-(void)_echoSearchNavigationElement:(id)element;
-(void)_echoFlickNavigationElement:(id)element;
-(void)elementFetchFoundElement:(id)element needsForceCacheUpdate:(BOOL)update;
-(void)_handleSearchRotorRight:(id)right;
-(void)_handleSearchRotorLeft:(id)left;
-(void)_handleSearchRotorDirection:(int)direction event:(id)event notifyUser:(BOOL)user;
-(void)_handleSearchRotorDirection:(int)direction event:(id)event;
-(void)_outputRotorTypeCount;
-(BOOL)_rotorTypeSupportsCounting:(int)counting;
-(void)elementsCounted:(int)counted;
-(int)cancelElementCountOutput;
-(void)forceRotorOffHandwritingIfNeeded;
-(void)setCurrentRotorType:(int)type;
-(int)currentRotorType;
-(void)_handleSearchRotorEcho:(id)echo;
-(void)_updateRotorForCurrentElement;
-(void)_handleStartTextSearch:(id)search;
-(void)_handleOngoingTextSearch:(id)search;
-(void)_handleItemChooserSelection:(id)selection;
-(void)_didDismissItemChooser;
-(void)_closeItemChooser;
-(void)_handleItemChooserSelectionMade:(id)made;
-(void)elementsRetrieved:(id)retrieved finished:(BOOL)finished;
-(void)_elementsRetrieved:(id)retrieved finished:(id)finished;
-(void)_showItemChooser:(id)chooser;
-(void)_resetItemChooserCache;
-(void)systemServerDied;
-(void)_systemServerDied;
-(void)_resetDirectInteractionCache;
-(id)directTouchInteractionRects;
-(BOOL)inDirectTouchMode;
-(BOOL)shouldTurnTrackingIntoDirectTouch;
-(void)setShouldTurnTrackingIntoDirectTouch:(BOOL)turnTrackingIntoDirectTouch;
-(BOOL)avoidAnnouncingDirectTouchArea;
-(BOOL)currentElementAllowsDirectTouch;
-(BOOL)directTouchElementsPresent;
-(void)_handleDirectTouchExplorationMode:(id)mode direction:(int)direction;
-(void)_handleHintsSettingMode:(id)mode direction:(int)direction;
-(void)_handleSearchTextEvent:(id)event;
-(void)_endTextSearchMode;
-(void)_handleCancelSpeaking:(id)speaking;
-(void)_handleToggleSpeaking:(id)speaking;
-(void)_handlePauseSpeaking:(id)speaking;
-(void)_handleContinueSpeaking:(id)speaking;
-(void)_handleReadFromTop:(id)top;
-(void)_handleCopySpeechToClipboard:(id)clipboard;
-(void)_handleReadAll:(id)all;
-(void)_continueReadAllWithElement:(id)element;
-(BOOL)_prepareStitchedWebReadAll:(id)all request:(id)request;
-(BOOL)_doesElement:(id)element deserveBoundaryCombination:(CGRect)combination;
-(void)_handleReadAllNextElement;
-(void)_stopReadAll;
-(void)_handleReadAllBookContent:(id)content fromTop:(BOOL)top;
-(BOOL)isReadingAll;
-(void)_startReadingBookForNewPage;
-(void)_handleBookPageFlipAndContinue;
-(BOOL)_handleMoreBookContentElements;
-(void)_echoLineInBookElement:(id)bookElement forEvent:(id)event;
-(BOOL)_bookContentElementInteraction:(CGPoint)interaction element:(id)element;
-(id)_currentTextLineInBookElement:(BOOL)bookElement;
-(id)_convertTextMarkerArrayToString:(id)string addInContentExtras:(BOOL)contentExtras;
-(void)_handleBookContentMovement:(id)movement direction:(int)direction unit:(int)unit;
-(NSRange)_rangeOfLine:(id)line inBookContent:(id)bookContent;
-(void)_setSelectedTextRange:(NSRange)range onElement:(id)element;
-(void)_handleIdle:(id)idle;
-(void)_cleanupMapInteractionOnIdle;
-(void)_performTouchTypingKeyPress:(id)press;
-(BOOL)_isTouchTypingEventTooCloseToEdge:(id)edge;
-(void)_setPreviousTouchTypingKey:(id)key;
-(void)_resetElementUnitIndexes;
-(void)hideVisualRotor;
-(void)_hideVisualRotor;
-(void)_showVisualRotor:(id)rotor direction:(BOOL)direction;
-(float)keyboardKeyPenumbra:(id)penumbra;
-(void)sendRequest:(id)request;
-(void)handleNotification:(int)notification withData:(id)data;
-(void)_notificationThreadCancel;
-(void)_handleEvent:(id)event;
-(void)handleEvent:(id)event;
-(void)_initializeCommands;
-(void)dealloc;
-(id)init;
@end
